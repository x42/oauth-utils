.\"                              hey, Emacs:   -*- nroff -*-
.\" oauth-utils is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; see the file COPYING.  If not, write to
.\" the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.TH OAUTH-UTILS 7 "October 18, 2008"
.\" Please update the above date whenever this man page is modified.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins (default)
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.\"
.\" defines for verbose text
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.de URL
\\$2 \(laURL: \\$1 \(ra\\$3
..
.\"
.SH NAME
oauth-utils \- command line utilities for oauth
.PP
OAuth.net \- An open protocol to allow secure API authorization  in a simple and standard method from desktop and web applications.
.SH About OAuth
The OAuth protocol enables websites or applications (Consumers) to access Protected Resources from a web service (Service Provider) via an API, without requiring Users to disclose their Service Provider credentials to the Consumers. More generally, OAuth creates a freely-implementable and generic methodology for API authentication.
.PP
An example use case is allowing printing service printer.example.com (the Consumer), to access private photos stored on photos.example.net (the Service Provider) without requiring Users to provide their photos.example.net credentials to printer.example.com.
.PP
OAuth does not require a specific user interface or interaction pattern, nor does it specify how Service Providers authenticate Users, making the protocol ideally suited for cases where authentication credentials are unavailable to the Consumer, such as with OpenID.
.PP
OAuth aims to unify the experience and implementation of delegated web service authentication into a single, community-driven protocol. OAuth builds on existing protocols and best practices that have been independently implemented by various websites. An open standard, supported by large and small providers alike, promotes a consistent and trusted experience for both application developers and the users of those applications. 
.PP
.SH Nomenclature
.TP
.B Service Provider:
A web application that allows access via OAuth. 
.TP
.B User:
An individual who has an account with the Service Provider. 
.TP
.B Consumer:
A website or application that uses OAuth to access the Service Provider on behalf of the User. 
.TP
.B Protected Resource(s):
Data controlled by the Service Provider, which the Consumer can access through authentication. 
.TP
.B Consumer Developer:
An individual or organization that implements a Consumer. 
.TP
.B Consumer Key:
A value used by the Consumer to identify itself to the Service Provider. 
.TP
.B Consumer Secret:
A secret used by the Consumer to establish ownership of the Consumer Key. 
.TP
.B Request Token:
A value used by the Consumer to obtain authorization from the User, and exchanged for an Access Token. 
.TP
.B Access Token:
A value used by the Consumer to gain access to the Protected Resources on behalf of the User, instead of using the Userâ€™s Service Provider credentials. 
.TP
.B Token Secret:
A secret used by the Consumer to establish ownership of a given Token. 
.TP
.B OAuth Protocol Parameters:
Parameters with names beginning with oauth_. 
.SH Authenticating with OAuth
OAuth authentication is the process in which Users grant access to their Protected Resources without sharing their credentials with the Consumer. OAuth uses Tokens generated by the Service Provider instead of the User's credentials in Protected Resources requests. The process uses two Token types:
.TP
.B Request Token:
Used by the Consumer to ask the User to authorize access to the Protected Resources. The User-authorized Request Token is exchanged for an Access Token, MUST only be used once, and MUST NOT be used for any other purpose. It is RECOMMENDED that Request Tokens have a limited lifetime. 
.TP
.B Access Token:
Used by the Consumer to access the Protected Resources on behalf of the User. Access Tokens MAY limit access to certain Protected Resources, and MAY have a limited lifetime. Service Providers SHOULD allow Users to revoke Access Tokens. Only the Access Token SHALL be used to access the Protect Resources. 
.PP
OAuth Authentication is done in three steps:

   1. The Consumer obtains an unauthorized Request Token.
   2. The User authorizes the Request Token.
   3. The Consumer exchanges the Request Token for an Access Token.
.PP
After successfully receiving the Access Token and Token Secret, the Consumer is able to access the Protected Resources on behalf of the User.
.SH EXAMPLE
\fBoauth-utils\fP comes with an example shell script in the documentation folder that implements an OAuth consumer and walks through above steps plus performing an example request.
.PP
Here's a stripped down version, examplifying different ways to run oauthsign. Note that the request-token for the 
.URL "http://term.ie/oauth/example/" "term.ie test-server"
is already authorized, thus step 2 can be skipped.
.PP
.Vb 1
\&   oauthsign \-X \-c key \-C secret http://term.ie/oauth/example/request_token.php
.PP
\&   curl "`oauthsign http://term.ie/oauth/example/access_token.php key secret requestkey requestsecret`"
.PP
\&   oauthsign \-x \-c key \-C secret \-t accesskey \-T accesssecret \-d 'foo=bar' \-F /tmp/test.oaf \-w \-\-post 'http://term.ie/oauth/example/echo_api.php?bar=baz'
.PP
\&   curl `oauthsign \-f /tmp/test.oaf 'http://term.ie/oauth/example/echo_api.php?bar=baz'`
.Ve

.SH LICENSE
The specification is made available under the OAuth Non-Assertion Covenant and Author Contribution License For OAuth Specification 1.0 available at http://oauth.net/license/core/1.0.
.SH "SEE ALSO"
.BR oauth (3),
.BR oauthsign (1),
.BR oauthverify (1),
.BR curl (1).
.\" .BR oauthrawpost (1).
.PP
.URL "http://oauth.net/" "OAuth website".
.PP
.URL "http://oauth.net/core/1.0/" "OAuth Core 1.0 - Documentation".
.PP
.URL "http://oauth.net/core/1.0/#anchor9" "Authentication Flow Diagram"
.SH AUTHOR
.URL "http://oauth.net/core/1.0/#anchor1" "oAuth Authors"
.PP
This manual page was written by Robin Gareus <robin@gareus.org>,
for the Debian project (but may be used by others).
